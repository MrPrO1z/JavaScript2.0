let f1 = document.querySelector('.f1');

function one() {
  console.log('work!!!')
}
one();
f1.onclick = one;// без скобок иначе просто перезапишется значение one() 
////////////////////////////////////////
//// если функция просто делает набор действий то результатом 
//////  ее выполнения будет undefind
////  что бы этого небыло надо возвращать ее 

function two() {
  console.log('work!!!! 222222');
  return 54;
}
// two();

console.log(1 + two());

let a = 8;
let b = 9;


function multi() {
  console.log(a * b);
  return a * b;
}
multi();
let c1 = multi();
let c2 = 10 * multi();
console.log(c1, c2);

function multi2(x = 5, y = 5) {
  return x * y;
  ////////////  после return все что будет написанно
  //// в функции будет проигнорировано и выполнятся не будет
}
/////////////////////////////////////
/// параметры задаются при вызове функции
/// если не указывать подставляются по умолчанию те которые
// в функции

console.log(multi2(4, 5));
console.log(multi2(20, 5));
console.log(multi2(20, a));
////////////////////////////////////////////////////////////
// анонимные функции можно вызывать только 1 раз////////////
////
document.querySelector('.f2').onclick = function () {     ///
  console.log('************');                          ///
}
////////////////////////////////
/// при повторном вызове анонимной функции предыдущяя будет 
/// перезатерта 

document.querySelector('.f2').onclick = () => {
  console.log('arrow');
  console.log('********************************');
}
/////////////////////////////////////////////
/// дальше примеры сокращенных записей    ///
///
// function(a, b) {                       ///
///
// }                                      ///
///
// (a, b) => {                            ///
///
// }                                      ///
/////////////////////////////////////////////
// function(a) {

// }

// a => {

// }
//////////////////////////////////////////////
// Task 1
// Напишите функцию t1, которая при нажатии кнопки выводит
//  в out-1 переменную a1.

// let a1 = 8;
// function t1() {

// }
// document.querySelector(‘.b-1’).onclick = t1;

let a1 = 8;
document.querySelector('.t1').onclick = function t1() {
  document.querySelector('.out1').innerHTML = a1;
}
//////////////////////////////////////////////////////////////////////////////
//                     Task 2                                              ///
// Изменим задачу 1. Сейчас она только выводит переменную в заранее        ///
//  заданный блок. Давайте сделаем так, чтобы функция, была более          ///
//   гибкой. Пусть теперь функция t2 возвращает переменную a2. Поскольку   ///
//    функция возвращает переменную, то имя функции со скобками            ///
//    (вызов функции) можно встраивать в выражения. Обратите внимание,     ///
//     как изменился вызов функции.                                        /// 
//                                                                         ///
// let a2 = 8;                                                             ///
// function t2() {                                                         /// 
//                                                                         ///
// }                                                                       /// 
// document.querySelector(‘.b-2’).onclick =function() {                    ///
//     document.querySelector(‘.out-2’).textContent = f2();                ///
// }                                                                       ///
//////////////////////////////////////////////////////////////////////////////

let a2 = 8;

function t2() {
  return a2;
}

document.querySelector('.t2').onclick = function () {
  document.querySelector('.out2').innerHTML = t2();
}
//////////////////////////////////////////////////////////////////////////////
//                            Task 3                                        //
//  Наша предыдущая функция, сильно все еще зависима от внешних переменных. //
//  Давайте сделаем ее более универсальной. Пусть функция t3 принимает 2    //
//  параметра и выводит их произведение. Допишите код функции так, чтобы    //
//  она возвращала произведение двух чисел, переданных ей в качестве        //
//  параметра a, b. Протестируем функцию на двух примерах, с помощью        //
//  кнопок b3-1 и b3-2.                                                     //
//                                                                          //
// function t3(a,b) {                                                       //
//                                                                          //
// }                                                                        //
// document.querySelector(‘.b-3-1’).onclick =function() {                   //
//     document.querySelector(‘.out-3-1’).textContent = t3(3,4);            //
// }                                                                        //
// document.querySelector(‘.b-3-2’).onclick = function(){                   //
//     document.querySelector(‘.out-3-2’).textContent = t3(5,6);            //
// }                                                                        //
//////////////////////////////////////////////////////////////////////////////

function task3(a, b) {
  return a * b;
}
document.querySelector('.t3').onclick = function () {
  document.querySelector('.out3').innerHTML = task3(5, 5);
}

document.querySelector('.t4').onclick = function () {
  document.querySelector('.out4').innerHTML = task3(7, 7);
}